{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","node_modules/detect-zoom/detect-zoom.js","bundle.js","node_modules/font-baseline/index.js","node_modules/lodash.assign/index.js","node_modules/lodash.assign/node_modules/lodash.keys/index.js","node_modules/lodash.assign/node_modules/lodash.rest/index.js","src/index.js","src/renderers/canvas.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","TypographicUnderline","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"root","ns","factory","devicePixelRatio","fallback","zoom","devicePxPerCssPx","ie8","Math","round","screen","deviceXDPI","logicalXDPI","ie10","document","documentElement","offsetHeight","innerHeight","webkitMobile","deviceWidth","abs","orientation","height","width","innerWidth","webkit","important","str","replace","div","createElement","innerHTML","setAttribute","container","appendChild","body","clientHeight","removeChild","firefox4","mediaQueryBinarySearch","firefox18","opera11","top","outerWidth","property","unit","b","maxIter","epsilon","binarySearch","mid","query","matchMedia","matches","head","style","getElementsByTagName","className","display","sheet","insertRule","matched","getComputedStyle","textDecoration","deleteRule","ratio","detectFunction","func","isNaN","systemXDPI","navigator","msMaxTouchPoints","webkitTextSizeAdjust","userAgent","indexOf","device",2,"fontBaseline","computedStyle","baselineHeight","strutHeight","fontSize","strut","innerText","classList","add","parseInt","lineHeight","offsetTop","parentNode","baseline","content","font","line","multiplier","offset","w","c","m",3,"isIndex","value","reIsUint","test","MAX_SAFE_INTEGER","assignValue","object","key","objValue","eq","objectProto","hasOwnProperty","undefined","baseProperty","copyObject","source","props","copyObjectWith","customizer","index","newValue","createAssigner","assigner","rest","sources","guard","isIterateeCall","Object","isObject","type","isArrayLike","other","isFunction","isLength","getLength","tag","objectToString","funcTag","genTag","keys","prototype","toString","assign","lodash.keys","lodash.rest",4,"baseTimes","iteratee","result","Array","baseHas","getPrototypeOf","baseKeys","nativeKeys","indexKeys","isArray","isString","isArguments","String","isPrototype","Ctor","constructor","proto","isArrayLikeObject","propertyIsEnumerable","argsTag","isObjectLike","stringTag","isProto","indexes","skipIndexes","push",5,"apply","thisArg","args","start","TypeError","FUNC_ERROR_TEXT","nativeMax","toInteger","arguments","array","otherArgs","toNumber","INFINITY","sign","MAX_INTEGER","remainder","valueOf","reTrim","isBinary","reIsBinary","reIsOctal","freeParseInt","slice","reIsBadHex","NAN","max",6,"Underline","el","options","_this","console","error","els","querySelectorAll","strokeStyle","position","masking","strokeWidth","lines","from","map","Renderer","addEventListener","resize","bind","renderer","update","destroy","./renderers/canvas","lodash.assign",7,"Canvas","elStyles","fontMetrics","canvas","ctx","getContext","detectZoom","updateText","measureOffset","children","getBoundingClientRect","scrollY","resizeCanvas","boundingBox","scale","lineJoin","left","zIndex","canvasOffset","measureSpace","updateLines","render","text","textContent","split","word","querySelector","join","space","spaceWidth","remove","currentLine","begin","end","drawLine","maskY","baselineY","lineY","log","lineWidth","beginPath","moveTo","lineTo","globalCompositeOperation","stroke","closePath","fillStyle","textBaseline","fillText","strokeText","fontStyle","fontFamily","measureText","color","detect-zoom","font-baseline"],"mappings":"CAAA,SAAAA,GAAA,GAAA,gBAAAC,UAAA,mBAAAC,QAAAA,OAAAD,QAAAD,QAAA,IAAA,kBAAAG,SAAAA,OAAAC,IAAAD,UAAAH,OAAA,CAAA,GAAAK,EAAAA,GAAA,mBAAAC,QAAAA,OAAA,mBAAAC,QAAAA,OAAA,mBAAAC,MAAAA,KAAAC,KAAAJ,EAAAK,qBAAAV,MAAA,WAAA,GAAAG,EAAA,OAAA,SAAAQ,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAhB,GAAA,GAAAqB,OAAA,uBAAAL,EAAA,IAAA,MAAAhB,GAAAsB,KAAA,mBAAAtB,EAAA,GAAAuB,GAAAV,EAAAG,IAAAf,WAAAW,GAAAI,GAAA,GAAAQ,KAAAD,EAAAtB,QAAA,SAAAU,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAY,EAAAA,EAAAtB,QAAAU,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAf,QAAA,IAAA,GAAAmB,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAW,OAAAT,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAW,GAAA,SAAAP,EAAAjB,EAAAD,ICUA,SAAA0B,EAAAC,EAAAC,GACA,YAEA,oBAAA,IAAA3B,EAAAD,QACAC,EAAAD,QAAA4B,EAAAD,EAAAD,GACA,kBAAA,IAAAxB,EAAAC,IACAD,EAAA,WACA,MAAA0B,GAAAD,EAAAD,KAGAA,EAAAC,GAAAC,EAAAD,EAAAD,IAGArB,OAAA,aAAA,WAOA,GAAAwB,GAAA,WACA,MAAAxB,QAAAwB,kBAAA,GAQAC,EAAA,WACA,OACAC,KAAA,EACAC,iBAAA,IASAC,EAAA,WACA,GAAAF,GAAAG,KAAAC,MAAAC,OAAAC,WAAAD,OAAAE,YAAA,KAAA,GACA,QACAP,KAAAA,EACAC,iBAAAD,EAAAF,MAUAU,EAAA,WACA,GAAAR,GAAAG,KAAAC,MAAAK,SAAAC,gBAAAC,aAAArC,OAAAsC,YAAA,KAAA,GACA,QACAZ,KAAAA,EACAC,iBAAAD,EAAAF,MAYAe,EAAA,WACA,GAAAC,GAAA,IAAAX,KAAAY,IAAAzC,OAAA0C,aAAAX,OAAAY,OAAAZ,OAAAa,MACAlB,EAAAc,EAAAxC,OAAA6C,UACA,QACAnB,KAAAA,EACAC,iBAAAD,EAAAF,MAoBAsB,EAAA,WACA,GAAAC,GAAA,SAAAC,GACA,MAAAA,GAAAC,QAAA,KAAA,iBAGAC,EAAAf,SAAAgB,cAAA,MACAD,GAAAE,UAAA,iDACAF,EAAAG,aAAA,QAAAN,EAAA,wHAOA,IAAAO,GAAAnB,SAAAgB,cAAA,MACAG,GAAAD,aAAA,QAAAN,EAAA,+EACAO,EAAAC,YAAAL,GAEAf,SAAAqB,KAAAD,YAAAD,EACA,IAAA5B,GAAA,IAAAwB,EAAAO,YAIA,OAHA/B,GAAAG,KAAAC,MAAA,IAAAJ,GAAA,IACAS,SAAAqB,KAAAE,YAAAJ,IAGA5B,KAAAA,EACAC,iBAAAD,EAAAF,MAcAmC,EAAA,WACA,GAAAjC,GAAAkC,EAAA,8BAAA,GAAA,EAAA,GAAA,GAAA,KAEA,OADAlC,GAAAG,KAAAC,MAAA,IAAAJ,GAAA,KAEAA,KAAAA,EACAC,iBAAAD,IAaAmC,EAAA,WACA,OACAnC,KAAAiC,IAAAjC,KACAC,iBAAAH,MAYAsC,EAAA,WACA,GAAApC,GAAA1B,OAAA+D,IAAAC,WAAAhE,OAAA+D,IAAAlB,UAEA,OADAnB,GAAAG,KAAAC,MAAA,IAAAJ,GAAA,KAEAA,KAAAA,EACAC,iBAAAD,EAAAF,MAcAoC,EAAA,SAAAK,EAAAC,EAAAtD,EAAAuD,EAAAC,EAAAC,GA6BA,QAAAC,GAAA1D,EAAAuD,EAAAC,GACA,GAAAG,IAAA3D,EAAAuD,GAAA,CACA,IAAA,GAAAC,GAAAC,EAAAF,EAAAvD,EACA,MAAA2D,EAEA,IAAAC,GAAA,IAAAP,EAAA,IAAAM,EAAAL,EAAA,GACA,OAAAO,GAAAD,GAAAE,QACAJ,EAAAC,EAAAJ,EAAAC,EAAA,GAEAE,EAAA1D,EAAA2D,EAAAH,EAAA,GArCA,GAAAK,GACAE,EAAAC,EAAA1B,CACAlD,QAAAyE,WACAA,EAAAzE,OAAAyE,YAEAE,EAAAxC,SAAA0C,qBAAA,QAAA,GACAD,EAAAzC,SAAAgB,cAAA,SACAwB,EAAApB,YAAAqB,GAEA1B,EAAAf,SAAAgB,cAAA,OACAD,EAAA4B,UAAA,yBACA5B,EAAA0B,MAAAG,QAAA,OACA5C,SAAAqB,KAAAD,YAAAL,GAEAuB,EAAA,SAAAD,GACAI,EAAAI,MAAAC,WAAA,UAAAT,EAAA,0DAAA,EACA,IAAAU,GAAA,aAAAC,iBAAAjC,EAAA,MAAAkC,cAEA,OADAR,GAAAI,MAAAK,WAAA,IACAX,QAAAQ,IAGA,IAAAI,GAAAhB,EAAA1D,EAAAuD,EAAAC,EAKA,OAJAlB,KACAyB,EAAAjB,YAAAkB,GACAzC,SAAAqB,KAAAE,YAAAR,IAEAoC,GAoBAC,EAAA,WACA,GAAAC,GAAA/D,CA+BA,OA7BAgE,OAAA1D,OAAAE,cAAAwD,MAAA1D,OAAA2D,YAIA1F,OAAA2F,UAAAC,iBACAJ,EAAAtD,EAGA,gBAAAlC,SAAA,gBAAAmC,UAAAqB,KAAAoB,MAAAiB,qBACAL,EAAAjD,EAGA,gBAAAJ,UAAAqB,KAAAoB,MAAAiB,qBACAL,EAAA1C,EAGA6C,UAAAG,UAAAC,QAAA,UAAA,EACAP,EAAA1B,EAIA9D,OAAAwB,iBACAgE,EAAA3B,EAGAF,IAAAjC,KAAA,OACA8D,EAAA7B,GAzBA6B,EAAA5D,EA4BA4D,IAIA,QAMA9D,KAAA,WACA,MAAA6D,KAAA7D,MAOAsE,OAAA,WACA,MAAAT,KAAA5D,0BCMMsE,GAAG,SAASpF,EAAQjB,EAAOD,IC7SjC,SAAAE,GAAAA,EAAA,SAAAgB,EAAAlB,EAAAC,GAEA,QAAAsG,GAAA5C,GAEA,GAGA6C,GAAAC,EAAAC,EAAAC,EAHApD,EAAAf,SAAAgB,cAAA,OACAyB,EAAAzC,SAAAgB,cAAA,SACAoD,EAAApE,SAAAgB,cAAA,OA0BA,OAvBAG,GAAAA,GAAAnB,SAAAqB,KAEA+C,EAAAC,UAAA,IACA5B,EAAA4B,UAAA,yHAEAtD,EAAAK,YAAAgD,GACArD,EAAAK,YAAAqB,GACA1B,EAAAuD,UAAAC,IAAA,iBACApD,EAAAC,YAAAL,GAEAiD,EAAAnG,OAAAmF,iBAAAoB,GACAD,EAAAK,SAAAR,EAAAG,SAAA,IACAM,WAAAD,SAAAR,EAAAS,WAAA,IAEAL,EAAA3B,MAAAgC,WAAA,EAEAP,EAAAE,EAAAlE,aACA+D,EAAAG,EAAAM,UAAAR,EAAAnD,EAAAb,aAAAa,EAAA2D,UAEAD,WAAAA,YAAAP,EAEAnD,EAAA4D,WAAApD,YAAAR,IAGA6D,SAAAX,EACAY,QAAAX,EACAY,KAAAX,EACAY,KAAAN,WACAO,WAAAb,EAAAD,EACAe,QAAAR,WAAAP,GAAA,EAAAD,GAIAxG,EAAAD,QAAAuG,KAEA,kBAAArG,IAAAA,EAAAC,IAAAD,EACA,SAAAU,EAAA8G,GAAA,YAAA,OAAA,gBAAAzH,GAAA,SAAA0H,GACAA,EAAAzG,EAAAlB,EAAAC,IAAA,SAAA0H,GAAA,GAAAC,IAAA5H,WAAA2H,GAAA,SAAA/G,GACA,MAAA8G,GAAA9G,IAAAgH,EAAA5H,QAAA4H,GAAAF,EAAA9G,GAAAgH,EAAA5H,UAAA,gBAAAQ,YDgTMqH,GAAG,SAAS3G,EAAQjB,EAAOD,GElUjC,QAAA8H,GAAAC,EAAAvG,GAGA,MAFAuG,GAAA,gBAAAA,IAAAC,EAAAC,KAAAF,IAAAA,EAAA,GACAvG,EAAA,MAAAA,EAAA0G,EAAA1G,EACAuG,EAAA,IAAAA,EAAA,GAAA,GAAAvG,EAAAuG,EAyBA,QAAAI,GAAAC,EAAAC,EAAAN,GACA,GAAAO,GAAAF,EAAAC,KACAE,EAAAD,EAAAP,IACAQ,EAAAD,EAAAE,EAAAH,MAAAI,EAAAlH,KAAA6G,EAAAC,IACAK,SAAAX,KAAAM,IAAAD,OACAA,EAAAC,GAAAN,GAWA,QAAAY,GAAAN,GACA,MAAA,UAAAD,GACA,MAAA,OAAAA,EAAAM,OAAAN,EAAAC,IAaA,QAAAO,GAAAC,EAAAC,EAAAV,GACA,MAAAW,GAAAF,EAAAC,EAAAV,GAcA,QAAAW,GAAAF,EAAAC,EAAAV,EAAAY,GACAZ,IAAAA,KAKA,KAHA,GAAAa,GAAA,GACAzH,EAAAsH,EAAAtH,SAEAyH,EAAAzH,GAAA,CACA,GAAA6G,GAAAS,EAAAG,GACAC,EAAAF,EAAAA,EAAAZ,EAAAC,GAAAQ,EAAAR,GAAAA,EAAAD,EAAAS,GAAAA,EAAAR,EAEAF,GAAAC,EAAAC,EAAAa,GAEA,MAAAd,GAUA,QAAAe,GAAAC,GACA,MAAAC,GAAA,SAAAjB,EAAAkB,GACA,GAAAL,GAAA,GACAzH,EAAA8H,EAAA9H,OACAwH,EAAAxH,EAAA,EAAA8H,EAAA9H,EAAA,GAAAkH,OACAa,EAAA/H,EAAA,EAAA8H,EAAA,GAAAZ,MAQA,KANAM,EAAA,kBAAAA,IAAAxH,IAAAwH,GAAAN,OACAa,GAAAC,EAAAF,EAAA,GAAAA,EAAA,GAAAC,KACAP,EAAA,EAAAxH,EAAAkH,OAAAM,EACAxH,EAAA,GAEA4G,EAAAqB,OAAArB,KACAa,EAAAzH,GAAA,CACA,GAAAqH,GAAAS,EAAAL,EACAJ,IACAO,EAAAhB,EAAAS,EAAAI,EAAAD,GAGA,MAAAZ,KAyBA,QAAAoB,GAAAzB,EAAAkB,EAAAb,GACA,IAAAsB,EAAAtB,GACA,OAAA,CAEA,IAAAuB,SAAAV,EACA,QAAA,UAAAU,EACAC,EAAAxB,IAAAN,EAAAmB,EAAAb,EAAA5G,QACA,UAAAmI,GAAAV,IAAAb,IACAG,EAAAH,EAAAa,GAAAlB,IAEA,EAiCA,QAAAQ,GAAAR,EAAA8B,GACA,MAAA9B,KAAA8B,GAAA9B,IAAAA,GAAA8B,IAAAA,EA4BA,QAAAD,GAAA7B,GACA,MAAA,OAAAA,KACA,kBAAAA,IAAA+B,EAAA/B,KAAAgC,EAAAC,EAAAjC,IAmBA,QAAA+B,GAAA/B,GAIA,GAAAkC,GAAAP,EAAA3B,GAAAmC,EAAA3I,KAAAwG,GAAA,EACA,OAAAkC,IAAAE,GAAAF,GAAAG,EA2BA,QAAAL,GAAAhC,GACA,MAAA,gBAAAA,IAAAA,EAAA,IAAAA,EAAA,GAAA,GAAAG,GAAAH,EA0BA,QAAA2B,GAAA3B,GACA,GAAA4B,SAAA5B,EACA,SAAAA,IAAA,UAAA4B,GAAA,YAAAA,GA3TA,GAAAU,GAAAnJ,EAAA,eACAmI,EAAAnI,EAAA,eAGAgH,EAAA,iBAGAiC,EAAA,oBACAC,EAAA,6BAGApC,EAAA,mBAiBAQ,EAAAiB,OAAAa,UAGA7B,EAAAD,EAAAC,eAMAyB,EAAA1B,EAAA+B,SAiHAP,EAAArB,EAAA,UAsMA6B,EAAArB,EAAA,SAAAf,EAAAS,GACAD,EAAAC,EAAAwB,EAAAxB,GAAAT,IAGAnI,GAAAD,QAAAwK,IFkWGC,cAAc,EAAEC,cAAc,IAAIC,GAAG,SAASzJ,EAAQjB,EAAOD,GG5qBhE,QAAA4K,GAAAhK,EAAAiK,GAIA,IAHA,GAAA5B,GAAA,GACA6B,EAAAC,MAAAnK,KAEAqI,EAAArI,GACAkK,EAAA7B,GAAA4B,EAAA5B,EAEA,OAAA6B,GAWA,QAAAhD,GAAAC,EAAAvG,GAGA,MAFAuG,GAAA,gBAAAA,IAAAC,EAAAC,KAAAF,IAAAA,EAAA,GACAvG,EAAA,MAAAA,EAAA0G,EAAA1G,EACAuG,EAAA,IAAAA,EAAA,GAAA,GAAAvG,EAAAuG,EA8BA,QAAAiD,GAAA5C,EAAAC,GAIA,MAAAI,GAAAlH,KAAA6G,EAAAC,IACA,gBAAAD,IAAAC,IAAAD,IAAA,OAAA6C,EAAA7C,GAYA,QAAA8C,GAAA9C,GACA,MAAA+C,GAAA1B,OAAArB,IAUA,QAAAO,GAAAN,GACA,MAAA,UAAAD,GACA,MAAA,OAAAA,EAAAM,OAAAN,EAAAC,IAwBA,QAAA+C,GAAAhD,GACA,GAAA5G,GAAA4G,EAAAA,EAAA5G,OAAAkH,MACA,OAAAqB,GAAAvI,KACA6J,EAAAjD,IAAAkD,EAAAlD,IAAAmD,EAAAnD,IACAwC,EAAApJ,EAAAgK,QAEA,KAUA,QAAAC,GAAA1D,GACA,GAAA2D,GAAA3D,GAAAA,EAAA4D,YACAC,EAAA,kBAAAF,IAAAA,EAAApB,WAAA9B,CAEA,OAAAT,KAAA6D,EAmBA,QAAAL,GAAAxD,GAEA,MAAA8D,GAAA9D,IAAAU,EAAAlH,KAAAwG,EAAA,aACA+D,EAAAvK,KAAAwG,EAAA,WAAAmC,EAAA3I,KAAAwG,IAAAgE,GAqDA,QAAAnC,GAAA7B,GACA,MAAA,OAAAA,KACA,kBAAAA,IAAA+B,EAAA/B,KAAAgC,EAAAC,EAAAjC,IA2BA,QAAA8D,GAAA9D,GACA,MAAAiE,GAAAjE,IAAA6B,EAAA7B,GAmBA,QAAA+B,GAAA/B,GAIA,GAAAkC,GAAAP,EAAA3B,GAAAmC,EAAA3I,KAAAwG,GAAA,EACA,OAAAkC,IAAAE,GAAAF,GAAAG,EA2BA,QAAAL,GAAAhC,GACA,MAAA,gBAAAA,IAAAA,EAAA,IAAAA,EAAA,GAAA,GAAAG,GAAAH,EA0BA,QAAA2B,GAAA3B,GACA,GAAA4B,SAAA5B,EACA,SAAAA,IAAA,UAAA4B,GAAA,YAAAA,GA0BA,QAAAqC,GAAAjE,GACA,QAAAA,GAAA,gBAAAA,GAmBA,QAAAuD,GAAAvD,GACA,MAAA,gBAAAA,KACAsD,EAAAtD,IAAAiE,EAAAjE,IAAAmC,EAAA3I,KAAAwG,IAAAkE,EA8BA,QAAA5B,GAAAjC,GACA,GAAA8D,GAAAT,EAAArD,EACA,KAAA8D,IAAAtC,EAAAxB,GACA,MAAA8C,GAAA9C,EAEA,IAAA+D,GAAAf,EAAAhD,GACAgE,IAAAD,EACArB,EAAAqB,MACA3K,EAAAsJ,EAAAtJ,MAEA,KAAA,GAAA6G,KAAAD,IACA4C,EAAA5C,EAAAC,IACA+D,IAAA,UAAA/D,GAAAP,EAAAO,EAAA7G,KACA0K,GAAA,eAAA7D,GACAyC,EAAAuB,KAAAhE,EAGA,OAAAyC,GAzaA,GAAA5C,GAAA,iBAGA6D,EAAA,qBACA5B,EAAA,oBACAC,EAAA,6BACA6B,EAAA,kBAGAjE,EAAA,mBAoCAQ,EAAAiB,OAAAa,UAGA7B,EAAAD,EAAAC,eAMAyB,EAAA1B,EAAA+B,SAGAU,EAAAxB,OAAAwB,eACAa,EAAAtD,EAAAsD,qBAGAX,EAAA1B,OAAAY,KAsDAL,EAAArB,EAAA,UA8EA0C,EAAAN,MAAAM,OA2OApL,GAAAD,QAAAqK,OH6sBMiC,GAAG,SAASpL,EAAQjB,EAAOD,GIrlCjC,QAAAuM,GAAA1G,EAAA2G,EAAAC,GACA,GAAAjL,GAAAiL,EAAAjL,MACA,QAAAA,GACA,IAAA,GAAA,MAAAqE,GAAAtE,KAAAiL,EACA,KAAA,GAAA,MAAA3G,GAAAtE,KAAAiL,EAAAC,EAAA,GACA,KAAA,GAAA,MAAA5G,GAAAtE,KAAAiL,EAAAC,EAAA,GAAAA,EAAA,GACA,KAAA,GAAA,MAAA5G,GAAAtE,KAAAiL,EAAAC,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAEA,MAAA5G,GAAA0G,MAAAC,EAAAC,GAqCA,QAAApD,GAAAxD,EAAA6G,GACA,GAAA,kBAAA7G,GACA,KAAA,IAAA8G,WAAAC,EAGA,OADAF,GAAAG,EAAAnE,SAAAgE,EAAA7G,EAAArE,OAAA,EAAAsL,EAAAJ,GAAA,GACA,WAMA,IALA,GAAAD,GAAAM,UACA9D,EAAA,GACAzH,EAAAqL,EAAAJ,EAAAjL,OAAAkL,EAAA,GACAM,EAAAjC,MAAAvJ,KAEAyH,EAAAzH,GACAwL,EAAA/D,GAAAwD,EAAAC,EAAAzD,EAEA,QAAAyD,GACA,IAAA,GAAA,MAAA7G,GAAAtE,KAAAf,KAAAwM,EACA,KAAA,GAAA,MAAAnH,GAAAtE,KAAAf,KAAAiM,EAAA,GAAAO,EACA,KAAA,GAAA,MAAAnH,GAAAtE,KAAAf,KAAAiM,EAAA,GAAAA,EAAA,GAAAO,GAEA,GAAAC,GAAAlC,MAAA2B,EAAA,EAEA,KADAzD,EAAA,KACAA,EAAAyD,GACAO,EAAAhE,GAAAwD,EAAAxD,EAGA,OADAgE,GAAAP,GAAAM,EACAT,EAAA1G,EAAArF,KAAAyM,IAoBA,QAAAnD,GAAA/B,GAIA,GAAAkC,GAAAP,EAAA3B,GAAAmC,EAAA3I,KAAAwG,GAAA,EACA,OAAAkC,IAAAE,GAAAF,GAAAG,EA0BA,QAAAV,GAAA3B,GACA,GAAA4B,SAAA5B,EACA,SAAAA,IAAA,UAAA4B,GAAA,YAAAA,GA2BA,QAAAmD,GAAA/E,GACA,IAAAA,EACA,MAAA,KAAAA,EAAAA,EAAA,CAGA,IADAA,EAAAmF,EAAAnF,GACAA,IAAAoF,GAAApF,KAAAoF,EAAA,CACA,GAAAC,GAAA,EAAArF,EAAA,GAAA,CACA,OAAAqF,GAAAC,EAEA,GAAAC,GAAAvF,EAAA,CACA,OAAAA,KAAAA,EAAAuF,EAAAvF,EAAAuF,EAAAvF,EAAA,EAyBA,QAAAmF,GAAAnF,GACA,GAAA2B,EAAA3B,GAAA,CACA,GAAA8B,GAAAC,EAAA/B,EAAAwF,SAAAxF,EAAAwF,UAAAxF,CACAA,GAAA2B,EAAAG,GAAAA,EAAA,GAAAA,EAEA,GAAA,gBAAA9B,GACA,MAAA,KAAAA,EAAAA,GAAAA,CAEAA,GAAAA,EAAAzE,QAAAkK,EAAA,GACA,IAAAC,GAAAC,EAAAzF,KAAAF,EACA,OAAA0F,IAAAE,EAAA1F,KAAAF,GACA6F,EAAA7F,EAAA8F,MAAA,GAAAJ,EAAA,EAAA,GACAK,EAAA7F,KAAAF,GAAAgG,GAAAhG,EAzOA,GAAA6E,GAAA,sBAGAO,EAAA,EAAA,EACAE,EAAA,uBACAU,EAAA,IAGA5D,EAAA,oBACAC,EAAA,6BAGAoD,EAAA,aAGAM,EAAA,qBAGAJ,EAAA,aAGAC,EAAA,cAGAC,EAAA5G,SAwBAwB,EAAAiB,OAAAa,UAMAJ,EAAA1B,EAAA+B,SAGAsC,EAAA3K,KAAA8L,GAmLA/N,GAAAD,QAAAqJ,OJsoCM4E,GAAG,SAAS/M,EAAQjB,EAAOD,GACjC,YK13CA,SAASkO,GAAWC,EAAIC,GLg4CtB,GAAIC,GAAQ7N,IK/3CP2N,IACHG,QAAQC,MAAM,+BAGhB,IAAMC,GAAoB,gBAAPL,GAAkB3L,SAASiM,iBAAiBN,GAAMA,CAEhEK,GAAIhN,QACP8M,QAAQC,MAAM,mBAAoBJ,GAGpCC,EAAU5D,MAGRkE,YAAa,OAIbC,SAAU,OAKVC,QAAS,OAIT3L,MAAO,OAGP4L,YAAa,QACZT,GAEH5N,KAAKsO,SAEL/D,MAAMgE,KAAKP,GAAKQ,IAAI,SAACb,GACnBE,EAAKS,MAAMzC,KAAK,GAAI4C,GAASd,EAAIC,MAGnC/N,OAAO6O,iBAAiB,SAAU1O,KAAK2O,OAAOC,KAAK5O,OA1CrD,GAAMgK,GAAStJ,EAAQ,iBACjB+N,EAAW/N,EAAQ,qBA4CzBgN,GAAU5D,UAAU6E,OAAS,WAC3B3O,KAAKsO,MAAME,IAAI,SAAUK,GACvBA,EAASF,YAIbjB,EAAU5D,UAAUgF,OAAS,WAC3B9O,KAAKsO,MAAME,IAAI,SAAUK,GACvBA,EAASC,YAIbpB,EAAU5D,UAAUiF,QAAU,WAC5B/O,KAAKsO,MAAME,IAAI,SAAUK,GACvBA,EAASE,aAIbtP,EAAOD,QAAUkO,ILm4CdsB,qBAAqB,EAAEC,gBAAgB,IAAIC,GAAG,SAASxO,EAAQjB,EAAOD,GACzE,YMh8CA,SAAS2P,GAAQxB,EAAIC,GACnB,GAAMwB,GAAWvP,OAAOmF,iBAAiB2I,EAAI,KAC7C3N,MAAK2N,GAAKA,EACV3N,KAAKqP,YAAczI,EAAS+G,GAC5B3N,KAAK4N,QAAUA,EAEf5N,KAAKsP,OAAStN,SAASgB,cAAc,UACrChD,KAAKsP,OAAO3K,UAAY,mBACxB3E,KAAKuP,IAAMvP,KAAKsP,OAAOE,WAAW,MAClCxP,KAAKmF,MAAQsK,EAAW5J,SAExB7F,KAAKsP,OAAO7M,MAAQ2M,EAAS3M,MAAQzC,KAAKmF,MAC1CnF,KAAKsP,OAAO9M,OAAS4M,EAAS5M,OAASxC,KAAKmF,MAE5CnF,KAAKsP,OAAO7K,MAAM0J,SAAW,WAC7BnO,KAAK2N,GAAGvK,YAAYpD,KAAKsP,QAEzBtP,KAAK0P,aACL1P,KAAK2O,SArBP,GAAM/H,GAAWlG,EAAQ,iBACnB+O,EAAa/O,EAAQ,cAuB3ByO,GAAOrF,UAAU6F,cAAgB,WAC/B3P,KAAK0G,UAAY1G,KAAK2N,GAAGiC,SAAS,GAAGC,wBAAwBjM,IAAK/D,OAAOiQ,SAG3EX,EAAOrF,UAAUiG,aAAe,WAC9B,GAAMC,GAAchQ,KAAK2N,GAAGkC,uBAC5B7P,MAAKsP,OAAO7M,MAAQuN,EAAYvN,MAAQzC,KAAKmF,MAC7CnF,KAAKsP,OAAO9M,OAAUwN,EAAYxN,OAASxC,KAAKmF,MAChDnF,KAAKuP,IAAIU,MAAMjQ,KAAKmF,MAAOnF,KAAKmF,OAChCnF,KAAKuP,IAAIW,SAAW,QACpBlQ,KAAKsP,OAAO7K,MAAM0L,KAAO,MACzBnQ,KAAKsP,OAAO7K,MAAMhC,MAAWuN,EAAYvN,MAAZ,KAC7BzC,KAAKsP,OAAO7K,MAAMjC,OAAYwN,EAAYxN,OAAZ,KAC9BxC,KAAKsP,OAAO7K,MAAMb,IAAS5D,KAAK0G,UAAL,KAC3B1G,KAAKsP,OAAO7K,MAAM0L,KAAUH,EAAYG,KAAZ,KAC5BnQ,KAAKsP,OAAO7K,MAAM2L,OAAS,KAC3BpQ,KAAKqQ,aAAeL,EAAYG,MAGlChB,EAAOrF,UAAU6E,OAAS,WACxB3O,KAAKsQ,eACLtQ,KAAK2P,gBACL3P,KAAK+P,eACL/P,KAAKuQ,cACLvQ,KAAKwQ,UAGPrB,EAAOrF,UAAU4F,WAAa,WAC5B,GAAMe,GAAOzQ,KAAK2N,GAAG+C,YAAYC,MAAM,MAAMnC,IAAI,SAACoC,GAChD,MAAA,gCAAuCA,EAAA,aAEnCtB,EAAStP,KAAK2N,GAAGkD,cAAc,oBACrC7Q,MAAK2N,GAAG1K,UAAY,GACpBjD,KAAK2N,GAAG1K,UAAYwN,EAAKK,KAAK,KAC1BxB,GAAQtP,KAAK2N,GAAGvK,YAAYkM,IAGlCH,EAAOrF,UAAUwG,aAAe,WAC9B,GAAMS,GAAQ/O,SAASgB,cAAc,OACrC+N,GAAM9N,UAAY,SAClBjD,KAAK2N,GAAGvK,YAAY2N,GACpB/Q,KAAKgR,WAAaD,EAAMlB,wBAAwBpN,MAChDsO,EAAME,UAGR9B,EAAOrF,UAAUyG,YAAc,WNs8C7B,GAAI1C,GAAQ7N,KMr8CRsO,KACA4C,GACFT,KAAM,GACNU,MAAO,KACPC,IAAK,EAEP7G,OAAMgE,KAAKvO,KAAK2N,GAAGiC,UAAUpB,IAAI,SAACoC,EAAMjQ,GACW,KAA7CiQ,EAAKjM,UAAUiB,QAAQ,oBAE3BsL,EAAYC,MAA8B,OAAtBD,EAAYC,MAC5BP,EAAKf,wBAAwBM,KAAOtC,EAAKwC,aACzCa,EAAYC,MAEhBD,EAAYE,KAAOR,EAAKf,wBAAwBpN,MAChDyO,EAAYT,MAAQG,EAAKF,aAEpB7C,EAAKF,GAAGiC,SAASjP,EAAI,IAAMkN,EAAKF,GAAGiC,SAASjP,EAAI,GAAGkP,wBAAwBjM,IAAMgN,EAAKf,wBAAwBjM,KAEjHsN,EAAYtN,IAAMgN,EAAKf,wBAAwBjM,IAAM/D,OAAOiQ,QAC5DoB,EAAYE,KAAOF,EAAYC,MAE/B7C,EAAMzC,MACJsF,MAAOD,EAAYC,MACnBC,IAAKF,EAAYE,IACjBxN,IAAKsN,EAAYtN,IACjB6M,KAAMS,EAAYT,OAEpBS,EAAYT,KAAO,GACnBS,EAAYC,MAAQ,KACpBD,EAAYE,IAAM,IAGlBF,EAAYE,KAAOvD,EAAKmD,WACxBE,EAAYT,MAAQ,QAGxBzQ,KAAKsO,MAAQA,GAGfa,EAAOrF,UAAU0G,OAAS,WAsBxB,QAASa,GAAUtK,EAAM0B,GACvB,GAAM6I,GAAQjC,EAAYtI,KAAO0B,EAC3B8I,GAAa9I,EAAQ,GAAK4G,EAAYtI,KAAOsI,EAAYpI,OAASoI,EAAYzI,SAC9E4K,EAAmC,SAA3BxR,KAAM4N,QAAQO,SACxBoD,EAAmC,YAAvBlC,EAAYzI,SACxB2K,EAAYvR,KAAK4N,QAAQO,SAAWnO,KAAKmF,KAE7C2I,SAAQ2D,IAAI1K,EAAK0J,KAAMpB,GAEvBE,EAAImC,UAA0B,EAAdrD,EACZ,EACA7H,SAAS6H,EAAa,IAE1BkB,EAAIrB,YAAcA,EAClBqB,EAAIoC,YACJpC,EAAIqC,OAAO7K,EAAKoK,MAAO3K,SAASgL,EAAO,KACvCjC,EAAIsC,OAAO9K,EAAKqK,IAAK5K,SAASgL,EAAO,KACrCjC,EAAIuC,yBAA2B,cAC/BvC,EAAIwC,SACJxC,EAAIyC,YAEC5D,IAELmB,EAAIuC,yBAA2B,kBAC/BvC,EAAIzI,KAAOA,EACXyI,EAAI0C,UAAY,QAChB1C,EAAI2C,aAAe,MACnB3C,EAAI4C,SAASpL,EAAK0J,KAAMjK,SAASO,EAAKoK,MAAO,IAAK3K,SAAS8K,EAAO,KAClE/B,EAAImC,UAAYlL,SAAS4H,EAAS,IAClCmB,EAAIrB,YAAc,OAClBqB,EAAI6C,WAAWrL,EAAK0J,KAAMjK,SAASO,EAAKoK,MAAO,IAAK3K,SAAS8K,EAAO,MAnDtE,GACMlC,IADcpP,KAAK2N,GAAGkC,wBACXhQ,OAAOmF,iBAAiBhF,KAAK2N,GAAI,OAC5C0B,EAAcrP,KAAKqP,YACnBE,EAAMvP,KAAKuP,IACXzI,EAAOyI,EAAIzI,KAAUsI,EAASiD,UAAT,IAAsBjD,EAASjJ,SAAT,IAAqBiJ,EAASkD,WACzEjE,EAA4C,SAA9BrO,KAAM4N,QAAQS,YAC9BrO,KAAKuP,IAAIgD,YAAY,KAAK9P,MAAQ,EAClCzC,KAAK4N,QAAQS,YAAcrO,KAAKmF,MAE9B+I,EAA4C,SAA9BlO,KAAM4N,QAAQM,YAC9BkB,EAASoD,MACTxS,KAAK4N,QAAQM,YAEXE,EAAoC,OAA1BpO,KAAM4N,QAAQQ,QACA,SAA1BpO,KAAM4N,QAAQQ,QACZpO,KAAKuP,IAAIgD,YAAY,KAAK9P,MAAQ,EAClCzC,KAAKmF,MAAQnF,KAAK4N,QAAQQ,SAC5B,CAEJpO,MAAKsO,MAAME,IAAI6C,EAASzC,KAAK5O,QAqC/BP,EAAOD,QAAU2P,IN07CdsD,cAAc,EAAEC,gBAAgB,SAAS,IAAI","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/* Detect-zoom\n * -----------\n * Cross Browser Zoom and Pixel Ratio Detector\n * Version 1.0.2 | Feb 25 2013\n * dual-licensed under the WTFPL and MIT license\n * Maintained by https://github/tombigel\n * Original developer https://github.com/yonran\n */\n\n//AMD and CommonJS initialization copied from https://github.com/zohararad/audio5js\n(function (root, ns, factory) {\n    \"use strict\";\n\n    if (typeof (module) !== 'undefined' && module.exports) { // CommonJS\n        module.exports = factory(ns, root);\n    } else if (typeof (define) === 'function' && define.amd) { // AMD\n        define(function () {\n            return factory(ns, root);\n        });\n    } else {\n        root[ns] = factory(ns, root);\n    }\n\n}(window, 'detectZoom', function () {\n\n    /**\n     * Use devicePixelRatio if supported by the browser\n     * @return {Number}\n     * @private\n     */\n    var devicePixelRatio = function () {\n        return window.devicePixelRatio || 1;\n    };\n\n    /**\n     * Fallback function to set default values\n     * @return {Object}\n     * @private\n     */\n    var fallback = function () {\n        return {\n            zoom: 1,\n            devicePxPerCssPx: 1\n        };\n    };\n    /**\n     * IE 8 and 9: no trick needed!\n     * TODO: Test on IE10 and Windows 8 RT\n     * @return {Object}\n     * @private\n     **/\n    var ie8 = function () {\n        var zoom = Math.round((screen.deviceXDPI / screen.logicalXDPI) * 100) / 100;\n        return {\n            zoom: zoom,\n            devicePxPerCssPx: zoom * devicePixelRatio()\n        };\n    };\n\n    /**\n     * For IE10 we need to change our technique again...\n     * thanks https://github.com/stefanvanburen\n     * @return {Object}\n     * @private\n     */\n    var ie10 = function () {\n        var zoom = Math.round((document.documentElement.offsetHeight / window.innerHeight) * 100) / 100;\n        return {\n            zoom: zoom,\n            devicePxPerCssPx: zoom * devicePixelRatio()\n        };\n    };\n\n    /**\n     * Mobile WebKit\n     * the trick: window.innerWIdth is in CSS pixels, while\n     * screen.width and screen.height are in system pixels.\n     * And there are no scrollbars to mess up the measurement.\n     * @return {Object}\n     * @private\n     */\n    var webkitMobile = function () {\n        var deviceWidth = (Math.abs(window.orientation) == 90) ? screen.height : screen.width;\n        var zoom = deviceWidth / window.innerWidth;\n        return {\n            zoom: zoom,\n            devicePxPerCssPx: zoom * devicePixelRatio()\n        };\n    };\n\n    /**\n     * Desktop Webkit\n     * the trick: an element's clientHeight is in CSS pixels, while you can\n     * set its line-height in system pixels using font-size and\n     * -webkit-text-size-adjust:none.\n     * device-pixel-ratio: http://www.webkit.org/blog/55/high-dpi-web-sites/\n     *\n     * Previous trick (used before http://trac.webkit.org/changeset/100847):\n     * documentElement.scrollWidth is in CSS pixels, while\n     * document.width was in system pixels. Note that this is the\n     * layout width of the document, which is slightly different from viewport\n     * because document width does not include scrollbars and might be wider\n     * due to big elements.\n     * @return {Object}\n     * @private\n     */\n    var webkit = function () {\n        var important = function (str) {\n            return str.replace(/;/g, \" !important;\");\n        };\n\n        var div = document.createElement('div');\n        div.innerHTML = \"1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>0\";\n        div.setAttribute('style', important('font: 100px/1em sans-serif; -webkit-text-size-adjust: none; height: auto; width: 1em; padding: 0; overflow: visible;'));\n\n        // The container exists so that the div will be laid out in its own flow\n        // while not impacting the layout, viewport size, or display of the\n        // webpage as a whole.\n        // Add !important and relevant CSS rule resets\n        // so that other rules cannot affect the results.\n        var container = document.createElement('div');\n        container.setAttribute('style', important('width:0; height:0; overflow:hidden; visibility:hidden; position: absolute;'));\n        container.appendChild(div);\n\n        document.body.appendChild(container);\n        var zoom = 1000 / div.clientHeight;\n        zoom = Math.round(zoom * 100) / 100;\n        document.body.removeChild(container);\n\n        return{\n            zoom: zoom,\n            devicePxPerCssPx: zoom * devicePixelRatio()\n        };\n    };\n\n    /**\n     * no real trick; device-pixel-ratio is the ratio of device dpi / css dpi.\n     * (Note that this is a different interpretation than Webkit's device\n     * pixel ratio, which is the ratio device dpi / system dpi).\n     *\n     * Also, for Mozilla, there is no difference between the zoom factor and the device ratio.\n     *\n     * @return {Object}\n     * @private\n     */\n    var firefox4 = function () {\n        var zoom = mediaQueryBinarySearch('min--moz-device-pixel-ratio', '', 0, 10, 20, 0.0001);\n        zoom = Math.round(zoom * 100) / 100;\n        return {\n            zoom: zoom,\n            devicePxPerCssPx: zoom\n        };\n    };\n\n    /**\n     * Firefox 18.x\n     * Mozilla added support for devicePixelRatio to Firefox 18,\n     * but it is affected by the zoom level, so, like in older\n     * Firefox we can't tell if we are in zoom mode or in a device\n     * with a different pixel ratio\n     * @return {Object}\n     * @private\n     */\n    var firefox18 = function () {\n        return {\n            zoom: firefox4().zoom,\n            devicePxPerCssPx: devicePixelRatio()\n        };\n    };\n\n    /**\n     * works starting Opera 11.11\n     * the trick: outerWidth is the viewport width including scrollbars in\n     * system px, while innerWidth is the viewport width including scrollbars\n     * in CSS px\n     * @return {Object}\n     * @private\n     */\n    var opera11 = function () {\n        var zoom = window.top.outerWidth / window.top.innerWidth;\n        zoom = Math.round(zoom * 100) / 100;\n        return {\n            zoom: zoom,\n            devicePxPerCssPx: zoom * devicePixelRatio()\n        };\n    };\n\n    /**\n     * Use a binary search through media queries to find zoom level in Firefox\n     * @param property\n     * @param unit\n     * @param a\n     * @param b\n     * @param maxIter\n     * @param epsilon\n     * @return {Number}\n     */\n    var mediaQueryBinarySearch = function (property, unit, a, b, maxIter, epsilon) {\n        var matchMedia;\n        var head, style, div;\n        if (window.matchMedia) {\n            matchMedia = window.matchMedia;\n        } else {\n            head = document.getElementsByTagName('head')[0];\n            style = document.createElement('style');\n            head.appendChild(style);\n\n            div = document.createElement('div');\n            div.className = 'mediaQueryBinarySearch';\n            div.style.display = 'none';\n            document.body.appendChild(div);\n\n            matchMedia = function (query) {\n                style.sheet.insertRule('@media ' + query + '{.mediaQueryBinarySearch ' + '{text-decoration: underline} }', 0);\n                var matched = getComputedStyle(div, null).textDecoration == 'underline';\n                style.sheet.deleteRule(0);\n                return {matches: matched};\n            };\n        }\n        var ratio = binarySearch(a, b, maxIter);\n        if (div) {\n            head.removeChild(style);\n            document.body.removeChild(div);\n        }\n        return ratio;\n\n        function binarySearch(a, b, maxIter) {\n            var mid = (a + b) / 2;\n            if (maxIter <= 0 || b - a < epsilon) {\n                return mid;\n            }\n            var query = \"(\" + property + \":\" + mid + unit + \")\";\n            if (matchMedia(query).matches) {\n                return binarySearch(mid, b, maxIter - 1);\n            } else {\n                return binarySearch(a, mid, maxIter - 1);\n            }\n        }\n    };\n\n    /**\n     * Generate detection function\n     * @private\n     */\n    var detectFunction = (function () {\n        var func = fallback;\n        //IE8+\n        if (!isNaN(screen.logicalXDPI) && !isNaN(screen.systemXDPI)) {\n            func = ie8;\n        }\n        // IE10+ / Touch\n        else if (window.navigator.msMaxTouchPoints) {\n            func = ie10;\n        }\n        //Mobile Webkit\n        else if ('ontouchstart' in window && typeof document.body.style.webkitTextSizeAdjust === 'string') {\n            func = webkitMobile;\n        }\n        //WebKit\n        else if (typeof document.body.style.webkitTextSizeAdjust === 'string') {\n            func = webkit;\n        }\n        //Opera\n        else if (navigator.userAgent.indexOf('Opera') >= 0) {\n            func = opera11;\n        }\n        //Last one is Firefox\n        //FF 18.x\n        else if (window.devicePixelRatio) {\n            func = firefox18;\n        }\n        //FF 4.0 - 17.x\n        else if (firefox4().zoom > 0.001) {\n            func = firefox4;\n        }\n\n        return func;\n    }());\n\n\n    return ({\n\n        /**\n         * Ratios.zoom shorthand\n         * @return {Number} Zoom level\n         */\n        zoom: function () {\n            return detectFunction().zoom;\n        },\n\n        /**\n         * Ratios.devicePxPerCssPx shorthand\n         * @return {Number} devicePxPerCssPx level\n         */\n        device: function () {\n            return detectFunction().devicePxPerCssPx;\n        }\n    });\n}));\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.TypographicUnderline = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n/* Detect-zoom\n * -----------\n * Cross Browser Zoom and Pixel Ratio Detector\n * Version 1.0.2 | Feb 25 2013\n * dual-licensed under the WTFPL and MIT license\n * Maintained by https://github/tombigel\n * Original developer https://github.com/yonran\n */\n\n//AMD and CommonJS initialization copied from https://github.com/zohararad/audio5js\n(function (root, ns, factory) {\n    \"use strict\";\n\n    if (typeof (module) !== 'undefined' && module.exports) { // CommonJS\n        module.exports = factory(ns, root);\n    } else if (typeof (define) === 'function' && define.amd) { // AMD\n        define(function () {\n            return factory(ns, root);\n        });\n    } else {\n        root[ns] = factory(ns, root);\n    }\n\n}(window, 'detectZoom', function () {\n\n    /**\n     * Use devicePixelRatio if supported by the browser\n     * @return {Number}\n     * @private\n     */\n    var devicePixelRatio = function () {\n        return window.devicePixelRatio || 1;\n    };\n\n    /**\n     * Fallback function to set default values\n     * @return {Object}\n     * @private\n     */\n    var fallback = function () {\n        return {\n            zoom: 1,\n            devicePxPerCssPx: 1\n        };\n    };\n    /**\n     * IE 8 and 9: no trick needed!\n     * TODO: Test on IE10 and Windows 8 RT\n     * @return {Object}\n     * @private\n     **/\n    var ie8 = function () {\n        var zoom = Math.round((screen.deviceXDPI / screen.logicalXDPI) * 100) / 100;\n        return {\n            zoom: zoom,\n            devicePxPerCssPx: zoom * devicePixelRatio()\n        };\n    };\n\n    /**\n     * For IE10 we need to change our technique again...\n     * thanks https://github.com/stefanvanburen\n     * @return {Object}\n     * @private\n     */\n    var ie10 = function () {\n        var zoom = Math.round((document.documentElement.offsetHeight / window.innerHeight) * 100) / 100;\n        return {\n            zoom: zoom,\n            devicePxPerCssPx: zoom * devicePixelRatio()\n        };\n    };\n\n    /**\n     * Mobile WebKit\n     * the trick: window.innerWIdth is in CSS pixels, while\n     * screen.width and screen.height are in system pixels.\n     * And there are no scrollbars to mess up the measurement.\n     * @return {Object}\n     * @private\n     */\n    var webkitMobile = function () {\n        var deviceWidth = (Math.abs(window.orientation) == 90) ? screen.height : screen.width;\n        var zoom = deviceWidth / window.innerWidth;\n        return {\n            zoom: zoom,\n            devicePxPerCssPx: zoom * devicePixelRatio()\n        };\n    };\n\n    /**\n     * Desktop Webkit\n     * the trick: an element's clientHeight is in CSS pixels, while you can\n     * set its line-height in system pixels using font-size and\n     * -webkit-text-size-adjust:none.\n     * device-pixel-ratio: http://www.webkit.org/blog/55/high-dpi-web-sites/\n     *\n     * Previous trick (used before http://trac.webkit.org/changeset/100847):\n     * documentElement.scrollWidth is in CSS pixels, while\n     * document.width was in system pixels. Note that this is the\n     * layout width of the document, which is slightly different from viewport\n     * because document width does not include scrollbars and might be wider\n     * due to big elements.\n     * @return {Object}\n     * @private\n     */\n    var webkit = function () {\n        var important = function (str) {\n            return str.replace(/;/g, \" !important;\");\n        };\n\n        var div = document.createElement('div');\n        div.innerHTML = \"1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>0\";\n        div.setAttribute('style', important('font: 100px/1em sans-serif; -webkit-text-size-adjust: none; height: auto; width: 1em; padding: 0; overflow: visible;'));\n\n        // The container exists so that the div will be laid out in its own flow\n        // while not impacting the layout, viewport size, or display of the\n        // webpage as a whole.\n        // Add !important and relevant CSS rule resets\n        // so that other rules cannot affect the results.\n        var container = document.createElement('div');\n        container.setAttribute('style', important('width:0; height:0; overflow:hidden; visibility:hidden; position: absolute;'));\n        container.appendChild(div);\n\n        document.body.appendChild(container);\n        var zoom = 1000 / div.clientHeight;\n        zoom = Math.round(zoom * 100) / 100;\n        document.body.removeChild(container);\n\n        return{\n            zoom: zoom,\n            devicePxPerCssPx: zoom * devicePixelRatio()\n        };\n    };\n\n    /**\n     * no real trick; device-pixel-ratio is the ratio of device dpi / css dpi.\n     * (Note that this is a different interpretation than Webkit's device\n     * pixel ratio, which is the ratio device dpi / system dpi).\n     *\n     * Also, for Mozilla, there is no difference between the zoom factor and the device ratio.\n     *\n     * @return {Object}\n     * @private\n     */\n    var firefox4 = function () {\n        var zoom = mediaQueryBinarySearch('min--moz-device-pixel-ratio', '', 0, 10, 20, 0.0001);\n        zoom = Math.round(zoom * 100) / 100;\n        return {\n            zoom: zoom,\n            devicePxPerCssPx: zoom\n        };\n    };\n\n    /**\n     * Firefox 18.x\n     * Mozilla added support for devicePixelRatio to Firefox 18,\n     * but it is affected by the zoom level, so, like in older\n     * Firefox we can't tell if we are in zoom mode or in a device\n     * with a different pixel ratio\n     * @return {Object}\n     * @private\n     */\n    var firefox18 = function () {\n        return {\n            zoom: firefox4().zoom,\n            devicePxPerCssPx: devicePixelRatio()\n        };\n    };\n\n    /**\n     * works starting Opera 11.11\n     * the trick: outerWidth is the viewport width including scrollbars in\n     * system px, while innerWidth is the viewport width including scrollbars\n     * in CSS px\n     * @return {Object}\n     * @private\n     */\n    var opera11 = function () {\n        var zoom = window.top.outerWidth / window.top.innerWidth;\n        zoom = Math.round(zoom * 100) / 100;\n        return {\n            zoom: zoom,\n            devicePxPerCssPx: zoom * devicePixelRatio()\n        };\n    };\n\n    /**\n     * Use a binary search through media queries to find zoom level in Firefox\n     * @param property\n     * @param unit\n     * @param a\n     * @param b\n     * @param maxIter\n     * @param epsilon\n     * @return {Number}\n     */\n    var mediaQueryBinarySearch = function (property, unit, a, b, maxIter, epsilon) {\n        var matchMedia;\n        var head, style, div;\n        if (window.matchMedia) {\n            matchMedia = window.matchMedia;\n        } else {\n            head = document.getElementsByTagName('head')[0];\n            style = document.createElement('style');\n            head.appendChild(style);\n\n            div = document.createElement('div');\n            div.className = 'mediaQueryBinarySearch';\n            div.style.display = 'none';\n            document.body.appendChild(div);\n\n            matchMedia = function (query) {\n                style.sheet.insertRule('@media ' + query + '{.mediaQueryBinarySearch ' + '{text-decoration: underline} }', 0);\n                var matched = getComputedStyle(div, null).textDecoration == 'underline';\n                style.sheet.deleteRule(0);\n                return {matches: matched};\n            };\n        }\n        var ratio = binarySearch(a, b, maxIter);\n        if (div) {\n            head.removeChild(style);\n            document.body.removeChild(div);\n        }\n        return ratio;\n\n        function binarySearch(a, b, maxIter) {\n            var mid = (a + b) / 2;\n            if (maxIter <= 0 || b - a < epsilon) {\n                return mid;\n            }\n            var query = \"(\" + property + \":\" + mid + unit + \")\";\n            if (matchMedia(query).matches) {\n                return binarySearch(mid, b, maxIter - 1);\n            } else {\n                return binarySearch(a, mid, maxIter - 1);\n            }\n        }\n    };\n\n    /**\n     * Generate detection function\n     * @private\n     */\n    var detectFunction = (function () {\n        var func = fallback;\n        //IE8+\n        if (!isNaN(screen.logicalXDPI) && !isNaN(screen.systemXDPI)) {\n            func = ie8;\n        }\n        // IE10+ / Touch\n        else if (window.navigator.msMaxTouchPoints) {\n            func = ie10;\n        }\n        //Mobile Webkit\n        else if ('ontouchstart' in window && typeof document.body.style.webkitTextSizeAdjust === 'string') {\n            func = webkitMobile;\n        }\n        //WebKit\n        else if (typeof document.body.style.webkitTextSizeAdjust === 'string') {\n            func = webkit;\n        }\n        //Opera\n        else if (navigator.userAgent.indexOf('Opera') >= 0) {\n            func = opera11;\n        }\n        //Last one is Firefox\n        //FF 18.x\n        else if (window.devicePixelRatio) {\n            func = firefox18;\n        }\n        //FF 4.0 - 17.x\n        else if (firefox4().zoom > 0.001) {\n            func = firefox4;\n        }\n\n        return func;\n    }());\n\n\n    return ({\n\n        /**\n         * Ratios.zoom shorthand\n         * @return {Number} Zoom level\n         */\n        zoom: function () {\n            return detectFunction().zoom;\n        },\n\n        /**\n         * Ratios.devicePxPerCssPx shorthand\n         * @return {Number} devicePxPerCssPx level\n         */\n        device: function () {\n            return detectFunction().devicePxPerCssPx;\n        }\n    });\n}));\n\n},{}],2:[function(require,module,exports){\n;(function(define){define(function(require,exports,module){\n\n\tfunction fontBaseline(container) {\n\n\t\tvar div   = document.createElement('div'),\n\t\t\tstyle = document.createElement('style'),\n\t\t\tstrut = document.createElement('span'),\n\t\t\tcomputedStyle, baselineHeight, strutHeight, fontSize;\n\n\t\tcontainer = container || document.body;\n\n\t\tstrut.innerText = 'T';\n\t\tstyle.innerText = \".font-baseline{visibility:hidden;height:100px;}.font-baseline span:after{content:'';height:100%;display:inline-block;}\";\n\n\t\tdiv.appendChild(strut);\n\t\tdiv.appendChild(style);\n\t\tdiv.classList.add('font-baseline');\n\t\tcontainer.appendChild(div);\n\n\t\tcomputedStyle  = window.getComputedStyle(strut);\n\t\tfontSize       = parseInt(computedStyle.fontSize, 10);\n\t\tlineHeight     = parseInt(computedStyle.lineHeight, 10);\n\n\t\tstrut.style.lineHeight = 0;\n\n\t\tstrutHeight    = strut.offsetHeight;\n\t\tbaselineHeight = strut.offsetTop + strutHeight - div.offsetHeight - div.offsetTop;\n\n\t\tlineHeight     = lineHeight || strutHeight;\n\n\t\tdiv.parentNode.removeChild(div);\n\n\t\treturn {\n\t\t\tbaseline:   baselineHeight,\n\t\t\tcontent:    strutHeight,\n\t\t\tfont:       fontSize,\n\t\t\tline:       lineHeight,\n\t\t\tmultiplier: fontSize / strutHeight,\n\t\t\toffset:     ((lineHeight - strutHeight) / 2) + baselineHeight\n\t\t};\n\t}\n\n\tmodule.exports = fontBaseline;\n\n});})(typeof define=='function'&&define.amd?define\n:(function(n,w){'use strict';return typeof module=='object'?function(c){\nc(require,exports,module);}:function(c){var m={exports:{}};c(function(n){\nreturn w[n];},m.exports,m);w[n]=m.exports;};})('font-baseline',this));\n\n},{}],3:[function(require,module,exports){\n/**\n * lodash 4.0.2 (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright 2012-2016 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar keys = require('lodash.keys'),\n    rest = require('lodash.rest');\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]';\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return value > -1 && value % 1 == 0 && value < length;\n}\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if ((!eq(objValue, value) ||\n        (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) ||\n      (value === undefined && !(key in object))) {\n    object[key] = value;\n  }\n}\n\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property names to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object) {\n  return copyObjectWith(source, props, object);\n}\n\n/**\n * This function is like `copyObject` except that it accepts a function to\n * customize copied values.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property names to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObjectWith(source, props, object, customizer) {\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index],\n        newValue = customizer ? customizer(object[key], source[key], key, object, source) : source[key];\n\n    assignValue(object, key, newValue);\n  }\n  return object;\n}\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return rest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = typeof customizer == 'function' ? (length--, customizer) : undefined;\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\n/**\n * Gets the \"length\" property value of `object`.\n *\n * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n * that affects Safari on at least iOS 8.1-8.3 ARM64.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {*} Returns the \"length\" value.\n */\nvar getLength = baseProperty('length');\n\n/**\n * Checks if the provided arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n      ? (isArrayLike(object) && isIndex(index, object.length))\n      : (type == 'string' && index in object)) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\n/**\n * Performs a [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'user': 'fred' };\n * var other = { 'user': 'fred' };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @type Function\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null &&\n    !(typeof value == 'function' && isFunction(value)) && isLength(getLength(value));\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8 which returns 'object' for typed array constructors, and\n  // PhantomJS 1.9 which returns 'function' for `NodeList` instances.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is loosely based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Assigns own enumerable properties of source objects to the destination\n * object. Source objects are applied from left to right. Subsequent sources\n * overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object` and is loosely based on\n * [`Object.assign`](https://mdn.io/Object/assign).\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @example\n *\n * function Foo() {\n *   this.c = 3;\n * }\n *\n * function Bar() {\n *   this.e = 5;\n * }\n *\n * Foo.prototype.d = 4;\n * Bar.prototype.f = 6;\n *\n * _.assign({ 'a': 1 }, new Foo, new Bar);\n * // => { 'a': 1, 'c': 3, 'e': 5 }\n */\nvar assign = createAssigner(function(object, source) {\n  copyObject(source, keys(source), object);\n});\n\nmodule.exports = assign;\n\n},{\"lodash.keys\":4,\"lodash.rest\":5}],4:[function(require,module,exports){\n/**\n * lodash 4.0.2 (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright 2012-2016 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    stringTag = '[object String]';\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return value > -1 && value % 1 == 0 && value < length;\n}\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar getPrototypeOf = Object.getPrototypeOf,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = Object.keys;\n\n/**\n * The base implementation of `_.has` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHas(object, key) {\n  // Avoid a bug in IE 10-11 where objects with a [[Prototype]] of `null`,\n  // that are composed entirely of index properties, return `false` for\n  // `hasOwnProperty` checks of them.\n  return hasOwnProperty.call(object, key) ||\n    (typeof object == 'object' && key in object && getPrototypeOf(object) === null);\n}\n\n/**\n * The base implementation of `_.keys` which doesn't skip the constructor\n * property of prototypes or treat sparse arrays as dense.\n *\n * @private\n * @type Function\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  return nativeKeys(Object(object));\n}\n\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * Gets the \"length\" property value of `object`.\n *\n * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n * that affects Safari on at least iOS 8.1-8.3 ARM64.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {*} Returns the \"length\" value.\n */\nvar getLength = baseProperty('length');\n\n/**\n * Creates an array of index keys for `object` values of arrays,\n * `arguments` objects, and strings, otherwise `null` is returned.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array|null} Returns index keys, else `null`.\n */\nfunction indexKeys(object) {\n  var length = object ? object.length : undefined;\n  if (isLength(length) &&\n      (isArray(object) || isString(object) || isArguments(object))) {\n    return baseTimes(length, String);\n  }\n  return null;\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 incorrectly makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @type Function\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @type Function\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null &&\n    !(typeof value == 'function' && isFunction(value)) && isLength(getLength(value));\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @type Function\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object, else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8 which returns 'object' for typed array constructors, and\n  // PhantomJS 1.9 which returns 'function' for `NodeList` instances.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is loosely based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  var isProto = isPrototype(object);\n  if (!(isProto || isArrayLike(object))) {\n    return baseKeys(object);\n  }\n  var indexes = indexKeys(object),\n      skipIndexes = !!indexes,\n      result = indexes || [],\n      length = result.length;\n\n  for (var key in object) {\n    if (baseHas(object, key) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length))) &&\n        !(isProto && key == 'constructor')) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = keys;\n\n},{}],5:[function(require,module,exports){\n/**\n * lodash 4.0.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright 2012-2016 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308,\n    NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {...*} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  var length = args.length;\n  switch (length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Creates a function that invokes `func` with the `this` binding of the\n * created function and arguments from `start` and beyond provided as an array.\n *\n * **Note:** This method is based on the [rest parameter](https://mdn.io/rest_parameters).\n *\n * @static\n * @memberOf _\n * @category Function\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n * @example\n *\n * var say = _.rest(function(what, names) {\n *   return what + ' ' + _.initial(names).join(', ') +\n *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n * });\n *\n * say('hello', 'fred', 'barney', 'pebbles');\n * // => 'hello fred, barney, & pebbles'\n */\nfunction rest(func, start) {\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  start = nativeMax(start === undefined ? (func.length - 1) : toInteger(start), 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    switch (start) {\n      case 0: return func.call(this, array);\n      case 1: return func.call(this, args[0], array);\n      case 2: return func.call(this, args[0], args[1], array);\n    }\n    var otherArgs = Array(start + 1);\n    index = -1;\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = array;\n    return apply(func, this, otherArgs);\n  };\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8 which returns 'object' for typed array constructors, and\n  // PhantomJS 1.9 which returns 'function' for `NodeList` instances.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This function is loosely based on [`ToInteger`](http://www.ecma-international.org/ecma-262/6.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3');\n * // => 3\n */\nfunction toInteger(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  var remainder = value % 1;\n  return value === value ? (remainder ? value - remainder : value) : 0;\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3);\n * // => 3\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3');\n * // => 3\n */\nfunction toNumber(value) {\n  if (isObject(value)) {\n    var other = isFunction(value.valueOf) ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = rest;\n\n},{}],6:[function(require,module,exports){\n'use strict';\n\nvar assign = require('lodash.assign');\nvar Renderer = require('./renderers/canvas');\n\nfunction Underline(el, options) {\n  var _this = this;\n\n  if (!el) {\n    console.error('No element parameter defined');\n  }\n\n  var els = typeof el === 'string' ? document.querySelectorAll(el) : el;\n\n  if (!els.length) {\n    console.error('No element found', el);\n  }\n\n  options = assign({}, {\n    // [string auto|color value] the color the underline stroke should have,\n    // if using auto the text color will be used\n    strokeStyle: 'auto',\n    // [string auto|int] if auto the position of the underline will equal the\n    // line height, otherwise provide an integer representing the amount of\n    // pixels from the top\n    position: 'auto',\n    // [string auto|int|null] the amount of whitespace between descenders and\n    // the stroke, if auto is set it calculates the optimal masking, if int is\n    // set that amount of masking is applied, if null is set no masking is\n    // applied\n    masking: 'auto',\n    // [string auto|int] if auto the width of the underline equals the width of\n    // the underlined text, otherwise provide an integer representing the width\n    // of the underline\n    width: 'auto',\n    // [string auto|int] if auto the stroke is calculated, if it's an integer\n    // that's the strokeWidth in pixels\n    strokeWidth: 'auto'\n  }, options);\n\n  this.lines = [];\n\n  Array.from(els).map(function (el) {\n    _this.lines.push(new Renderer(el, options));\n  });\n\n  window.addEventListener('resize', this.resize.bind(this));\n}\n\nUnderline.prototype.resize = function () {\n  this.lines.map(function (renderer) {\n    renderer.resize();\n  });\n};\n\nUnderline.prototype.update = function () {\n  this.lines.map(function (renderer) {\n    renderer.update();\n  });\n};\n\nUnderline.prototype.destroy = function () {\n  this.lines.map(function (renderer) {\n    renderer.destroy();\n  });\n};\n\nmodule.exports = Underline;\n\n},{\"./renderers/canvas\":7,\"lodash.assign\":3}],7:[function(require,module,exports){\n'use strict';\n\nvar baseline = require('font-baseline');\nvar detectZoom = require('detect-zoom');\n\nfunction Canvas(el, options) {\n  var elStyles = window.getComputedStyle(el, null);\n  this.el = el;\n  this.fontMetrics = baseline(el);\n  this.options = options;\n\n  this.canvas = document.createElement('canvas');\n  this.canvas.className = 'underline-canvas';\n  this.ctx = this.canvas.getContext('2d');\n  this.ratio = detectZoom.device();\n\n  this.canvas.width = elStyles.width * this.ratio;\n  this.canvas.height = elStyles.height * this.ratio;\n\n  this.canvas.style.position = 'absolute';\n  this.el.appendChild(this.canvas);\n\n  this.updateText();\n  this.resize();\n}\n\nCanvas.prototype.measureOffset = function () {\n  this.offsetTop = this.el.children[0].getBoundingClientRect().top + window.scrollY;\n};\n\nCanvas.prototype.resizeCanvas = function () {\n  var boundingBox = this.el.getBoundingClientRect();\n  this.canvas.width = boundingBox.width * this.ratio;\n  this.canvas.height = boundingBox.height * this.ratio;\n  this.ctx.scale(this.ratio, this.ratio);\n  this.ctx.lineJoin = 'round';\n  this.canvas.style.left = '0px';\n  this.canvas.style.width = boundingBox.width + 'px';\n  this.canvas.style.height = boundingBox.height + 'px';\n  this.canvas.style.top = this.offsetTop + 'px';\n  this.canvas.style.left = boundingBox.left + 'px';\n  this.canvas.style.zIndex = '-2';\n  this.canvasOffset = boundingBox.left;\n};\n\nCanvas.prototype.resize = function () {\n  this.measureSpace();\n  this.measureOffset();\n  this.resizeCanvas();\n  this.updateLines();\n  this.render();\n};\n\nCanvas.prototype.updateText = function () {\n  var text = this.el.textContent.split(/\\s/).map(function (word) {\n    return '<span class=\"underline-word\">' + word + '</span> ';\n  });\n  var canvas = this.el.querySelector('.underline-canvas');\n  this.el.innerHTML = '';\n  this.el.innerHTML = text.join(' ');\n  if (canvas) this.el.appendChild(canvas);\n};\n\nCanvas.prototype.measureSpace = function () {\n  var space = document.createElement('span');\n  space.innerHTML = '&nbsp;';\n  this.el.appendChild(space);\n  this.spaceWidth = space.getBoundingClientRect().width;\n  space.remove();\n};\n\nCanvas.prototype.updateLines = function () {\n  var _this = this;\n\n  var lines = [];\n  var currentLine = {\n    text: '',\n    begin: null,\n    end: 0\n  };\n  Array.from(this.el.children).map(function (word, i) {\n    if (word.className.indexOf('underline-word') === -1) return;\n\n    currentLine.begin = currentLine.begin === null ? word.getBoundingClientRect().left - _this.canvasOffset : currentLine.begin;\n\n    currentLine.end += word.getBoundingClientRect().width;\n    currentLine.text += word.textContent;\n\n    if (!_this.el.children[i + 2] || _this.el.children[i + 1].getBoundingClientRect().top > word.getBoundingClientRect().top) {\n      // end of line\n      currentLine.top = word.getBoundingClientRect().top + window.scrollY;\n      currentLine.end += currentLine.begin;\n\n      lines.push({\n        begin: currentLine.begin,\n        end: currentLine.end,\n        top: currentLine.top,\n        text: currentLine.text\n      });\n      currentLine.text = '';\n      currentLine.begin = null;\n      currentLine.end = 0;\n    } else {\n      // more to come on this line\n      currentLine.end += _this.spaceWidth;\n      currentLine.text += ' ';\n    }\n  });\n  this.lines = lines;\n};\n\nCanvas.prototype.render = function () {\n  var boundingBox = this.el.getBoundingClientRect();\n  var elStyles = window.getComputedStyle(this.el, null);\n  var fontMetrics = this.fontMetrics;\n  var ctx = this.ctx;\n  var font = ctx.font = elStyles.fontStyle + ' ' + elStyles.fontSize + ' ' + elStyles.fontFamily;\n  var strokeWidth = this.options.strokeWidth === 'auto' ? this.ctx.measureText('.').width / 6 : this.options.strokeWidth * this.ratio;\n\n  var strokeStyle = this.options.strokeStyle === 'auto' ? elStyles.color : this.options.strokeStyle;\n\n  var masking = this.options.masking !== null ? this.options.masking === 'auto' ? this.ctx.measureText('.').width / 2 : this.ratio * this.options.masking : false;\n\n  this.lines.map(drawLine.bind(this));\n\n  function drawLine(line, index) {\n    var maskY = fontMetrics.line * index;\n    var baselineY = (index + 1) * fontMetrics.line - fontMetrics.offset - fontMetrics.baseline;\n    var lineY = this.options.position === 'auto' ? baselineY + fontMetrics.baseline * 0.6180339887 : baselineY + this.options.position / this.ratio;\n\n    console.log(line.text, fontMetrics);\n\n    ctx.lineWidth = strokeWidth < 1 ? 1 : parseInt(strokeWidth, 10);\n\n    ctx.strokeStyle = strokeStyle;\n    ctx.beginPath();\n    ctx.moveTo(line.begin, parseInt(lineY, 10));\n    ctx.lineTo(line.end, parseInt(lineY, 10));\n    ctx.globalCompositeOperation = 'source-over';\n    ctx.stroke();\n    ctx.closePath();\n\n    if (!masking) return;\n\n    ctx.globalCompositeOperation = 'destination-out';\n    ctx.font = font;\n    ctx.fillStyle = 'green';\n    ctx.textBaseline = 'top';\n    ctx.fillText(line.text, parseInt(line.begin, 10), parseInt(maskY, 10));\n    ctx.lineWidth = parseInt(masking, 10);\n    ctx.strokeStyle = 'blue';\n    ctx.strokeText(line.text, parseInt(line.begin, 10), parseInt(maskY, 10));\n  }\n};\n\nmodule.exports = Canvas;\n\n},{\"detect-zoom\":1,\"font-baseline\":2}]},{},[6])(6)\n});\n\n",";(function(define){define(function(require,exports,module){\n\n\tfunction fontBaseline(container) {\n\n\t\tvar div   = document.createElement('div'),\n\t\t\tstyle = document.createElement('style'),\n\t\t\tstrut = document.createElement('span'),\n\t\t\tcomputedStyle, baselineHeight, strutHeight, fontSize;\n\n\t\tcontainer = container || document.body;\n\n\t\tstrut.innerText = 'T';\n\t\tstyle.innerText = \".font-baseline{visibility:hidden;height:100px;}.font-baseline span:after{content:'';height:100%;display:inline-block;}\";\n\n\t\tdiv.appendChild(strut);\n\t\tdiv.appendChild(style);\n\t\tdiv.classList.add('font-baseline');\n\t\tcontainer.appendChild(div);\n\n\t\tcomputedStyle  = window.getComputedStyle(strut);\n\t\tfontSize       = parseInt(computedStyle.fontSize, 10);\n\t\tlineHeight     = parseInt(computedStyle.lineHeight, 10);\n\n\t\tstrut.style.lineHeight = 0;\n\n\t\tstrutHeight    = strut.offsetHeight;\n\t\tbaselineHeight = strut.offsetTop + strutHeight - div.offsetHeight - div.offsetTop;\n\n\t\tlineHeight     = lineHeight || strutHeight;\n\n\t\tdiv.parentNode.removeChild(div);\n\n\t\treturn {\n\t\t\tbaseline:   baselineHeight,\n\t\t\tcontent:    strutHeight,\n\t\t\tfont:       fontSize,\n\t\t\tline:       lineHeight,\n\t\t\tmultiplier: fontSize / strutHeight,\n\t\t\toffset:     ((lineHeight - strutHeight) / 2) + baselineHeight\n\t\t};\n\t}\n\n\tmodule.exports = fontBaseline;\n\n});})(typeof define=='function'&&define.amd?define\n:(function(n,w){'use strict';return typeof module=='object'?function(c){\nc(require,exports,module);}:function(c){var m={exports:{}};c(function(n){\nreturn w[n];},m.exports,m);w[n]=m.exports;};})('font-baseline',this));\n","/**\n * lodash 4.0.2 (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright 2012-2016 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar keys = require('lodash.keys'),\n    rest = require('lodash.rest');\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]';\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return value > -1 && value % 1 == 0 && value < length;\n}\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if ((!eq(objValue, value) ||\n        (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) ||\n      (value === undefined && !(key in object))) {\n    object[key] = value;\n  }\n}\n\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property names to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object) {\n  return copyObjectWith(source, props, object);\n}\n\n/**\n * This function is like `copyObject` except that it accepts a function to\n * customize copied values.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property names to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObjectWith(source, props, object, customizer) {\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index],\n        newValue = customizer ? customizer(object[key], source[key], key, object, source) : source[key];\n\n    assignValue(object, key, newValue);\n  }\n  return object;\n}\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return rest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = typeof customizer == 'function' ? (length--, customizer) : undefined;\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\n/**\n * Gets the \"length\" property value of `object`.\n *\n * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n * that affects Safari on at least iOS 8.1-8.3 ARM64.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {*} Returns the \"length\" value.\n */\nvar getLength = baseProperty('length');\n\n/**\n * Checks if the provided arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n      ? (isArrayLike(object) && isIndex(index, object.length))\n      : (type == 'string' && index in object)) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\n/**\n * Performs a [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'user': 'fred' };\n * var other = { 'user': 'fred' };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @type Function\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null &&\n    !(typeof value == 'function' && isFunction(value)) && isLength(getLength(value));\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8 which returns 'object' for typed array constructors, and\n  // PhantomJS 1.9 which returns 'function' for `NodeList` instances.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is loosely based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Assigns own enumerable properties of source objects to the destination\n * object. Source objects are applied from left to right. Subsequent sources\n * overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object` and is loosely based on\n * [`Object.assign`](https://mdn.io/Object/assign).\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @example\n *\n * function Foo() {\n *   this.c = 3;\n * }\n *\n * function Bar() {\n *   this.e = 5;\n * }\n *\n * Foo.prototype.d = 4;\n * Bar.prototype.f = 6;\n *\n * _.assign({ 'a': 1 }, new Foo, new Bar);\n * // => { 'a': 1, 'c': 3, 'e': 5 }\n */\nvar assign = createAssigner(function(object, source) {\n  copyObject(source, keys(source), object);\n});\n\nmodule.exports = assign;\n","/**\n * lodash 4.0.2 (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright 2012-2016 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    stringTag = '[object String]';\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return value > -1 && value % 1 == 0 && value < length;\n}\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar getPrototypeOf = Object.getPrototypeOf,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = Object.keys;\n\n/**\n * The base implementation of `_.has` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHas(object, key) {\n  // Avoid a bug in IE 10-11 where objects with a [[Prototype]] of `null`,\n  // that are composed entirely of index properties, return `false` for\n  // `hasOwnProperty` checks of them.\n  return hasOwnProperty.call(object, key) ||\n    (typeof object == 'object' && key in object && getPrototypeOf(object) === null);\n}\n\n/**\n * The base implementation of `_.keys` which doesn't skip the constructor\n * property of prototypes or treat sparse arrays as dense.\n *\n * @private\n * @type Function\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  return nativeKeys(Object(object));\n}\n\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * Gets the \"length\" property value of `object`.\n *\n * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n * that affects Safari on at least iOS 8.1-8.3 ARM64.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {*} Returns the \"length\" value.\n */\nvar getLength = baseProperty('length');\n\n/**\n * Creates an array of index keys for `object` values of arrays,\n * `arguments` objects, and strings, otherwise `null` is returned.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array|null} Returns index keys, else `null`.\n */\nfunction indexKeys(object) {\n  var length = object ? object.length : undefined;\n  if (isLength(length) &&\n      (isArray(object) || isString(object) || isArguments(object))) {\n    return baseTimes(length, String);\n  }\n  return null;\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 incorrectly makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @type Function\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @type Function\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null &&\n    !(typeof value == 'function' && isFunction(value)) && isLength(getLength(value));\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @type Function\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object, else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8 which returns 'object' for typed array constructors, and\n  // PhantomJS 1.9 which returns 'function' for `NodeList` instances.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is loosely based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  var isProto = isPrototype(object);\n  if (!(isProto || isArrayLike(object))) {\n    return baseKeys(object);\n  }\n  var indexes = indexKeys(object),\n      skipIndexes = !!indexes,\n      result = indexes || [],\n      length = result.length;\n\n  for (var key in object) {\n    if (baseHas(object, key) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length))) &&\n        !(isProto && key == 'constructor')) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = keys;\n","/**\n * lodash 4.0.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright 2012-2016 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308,\n    NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {...*} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  var length = args.length;\n  switch (length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Creates a function that invokes `func` with the `this` binding of the\n * created function and arguments from `start` and beyond provided as an array.\n *\n * **Note:** This method is based on the [rest parameter](https://mdn.io/rest_parameters).\n *\n * @static\n * @memberOf _\n * @category Function\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n * @example\n *\n * var say = _.rest(function(what, names) {\n *   return what + ' ' + _.initial(names).join(', ') +\n *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n * });\n *\n * say('hello', 'fred', 'barney', 'pebbles');\n * // => 'hello fred, barney, & pebbles'\n */\nfunction rest(func, start) {\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  start = nativeMax(start === undefined ? (func.length - 1) : toInteger(start), 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    switch (start) {\n      case 0: return func.call(this, array);\n      case 1: return func.call(this, args[0], array);\n      case 2: return func.call(this, args[0], args[1], array);\n    }\n    var otherArgs = Array(start + 1);\n    index = -1;\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = array;\n    return apply(func, this, otherArgs);\n  };\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8 which returns 'object' for typed array constructors, and\n  // PhantomJS 1.9 which returns 'function' for `NodeList` instances.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This function is loosely based on [`ToInteger`](http://www.ecma-international.org/ecma-262/6.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3');\n * // => 3\n */\nfunction toInteger(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  var remainder = value % 1;\n  return value === value ? (remainder ? value - remainder : value) : 0;\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3);\n * // => 3\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3');\n * // => 3\n */\nfunction toNumber(value) {\n  if (isObject(value)) {\n    var other = isFunction(value.valueOf) ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = rest;\n","const assign = require('lodash.assign')\nconst Renderer = require('./renderers/canvas')\n\nfunction Underline (el, options) {\n  if (!el) {\n    console.error('No element parameter defined')\n  }\n\n  const els = typeof el === 'string' ? document.querySelectorAll(el) : el\n\n  if (!els.length) {\n    console.error('No element found', el)\n  }\n\n  options = assign({}, {\n    // [string auto|color value] the color the underline stroke should have,\n    // if using auto the text color will be used\n    strokeStyle: 'auto',\n    // [string auto|int] if auto the position of the underline will equal the\n    // line height, otherwise provide an integer representing the amount of\n    // pixels from the top\n    position: 'auto',\n    // [string auto|int|null] the amount of whitespace between descenders and\n    // the stroke, if auto is set it calculates the optimal masking, if int is\n    // set that amount of masking is applied, if null is set no masking is\n    // applied\n    masking: 'auto',\n    // [string auto|int] if auto the width of the underline equals the width of\n    // the underlined text, otherwise provide an integer representing the width\n    // of the underline\n    width: 'auto',\n    // [string auto|int] if auto the stroke is calculated, if it's an integer\n    // that's the strokeWidth in pixels\n    strokeWidth: 'auto'\n  }, options)\n\n  this.lines = []\n\n  Array.from(els).map((el) => {\n    this.lines.push(new Renderer(el, options))\n  })\n\n  window.addEventListener('resize', this.resize.bind(this))\n}\n\nUnderline.prototype.resize = function () {\n  this.lines.map(function (renderer) {\n    renderer.resize()\n  })\n}\n\nUnderline.prototype.update = function () {\n  this.lines.map(function (renderer) {\n    renderer.update()\n  })\n}\n\nUnderline.prototype.destroy = function () {\n  this.lines.map(function (renderer) {\n    renderer.destroy()\n  })\n}\n\nmodule.exports = Underline\n","const baseline = require('font-baseline')\nconst detectZoom = require('detect-zoom')\n\nfunction Canvas (el, options) {\n  const elStyles = window.getComputedStyle(el, null)\n  this.el = el\n  this.fontMetrics = baseline(el)\n  this.options = options\n\n  this.canvas = document.createElement('canvas')\n  this.canvas.className = 'underline-canvas'\n  this.ctx = this.canvas.getContext('2d')\n  this.ratio = detectZoom.device()\n\n  this.canvas.width = elStyles.width * this.ratio\n  this.canvas.height = elStyles.height * this.ratio\n\n  this.canvas.style.position = 'absolute'\n  this.el.appendChild(this.canvas)\n\n  this.updateText()\n  this.resize()\n}\n\nCanvas.prototype.measureOffset = function() {\n  this.offsetTop = this.el.children[0].getBoundingClientRect().top +window.scrollY\n}\n\nCanvas.prototype.resizeCanvas = function () {\n  const boundingBox = this.el.getBoundingClientRect()\n  this.canvas.width = boundingBox.width * this.ratio\n  this.canvas.height = (boundingBox.height * this.ratio)\n  this.ctx.scale(this.ratio, this.ratio)\n  this.ctx.lineJoin = 'round'\n  this.canvas.style.left = '0px'\n  this.canvas.style.width = `${boundingBox.width}px`\n  this.canvas.style.height = `${boundingBox.height}px`\n  this.canvas.style.top = `${this.offsetTop}px`\n  this.canvas.style.left = `${boundingBox.left}px`\n  this.canvas.style.zIndex = '-2'\n  this.canvasOffset = boundingBox.left\n}\n\nCanvas.prototype.resize = function () {\n  this.measureSpace()\n  this.measureOffset()\n  this.resizeCanvas()\n  this.updateLines()\n  this.render()\n}\n\nCanvas.prototype.updateText = function () {\n  const text = this.el.textContent.split(/\\s/).map((word) => {\n    return `<span class=\"underline-word\">${word}</span> `\n  })\n  const canvas = this.el.querySelector('.underline-canvas')\n  this.el.innerHTML = ''\n  this.el.innerHTML = text.join(' ')\n  if (canvas) this.el.appendChild(canvas)\n}\n\nCanvas.prototype.measureSpace = function () {\n  const space = document.createElement('span')\n  space.innerHTML = '&nbsp;'\n  this.el.appendChild(space)\n  this.spaceWidth = space.getBoundingClientRect().width\n  space.remove()\n}\n\nCanvas.prototype.updateLines = function () {\n  let lines = []\n  let currentLine = {\n    text: '',\n    begin: null,\n    end: 0\n  }\n  Array.from(this.el.children).map((word, i) => {\n    if (word.className.indexOf('underline-word') === -1) return\n\n    currentLine.begin = currentLine.begin === null\n      ? word.getBoundingClientRect().left - this.canvasOffset\n      : currentLine.begin\n\n    currentLine.end += word.getBoundingClientRect().width\n    currentLine.text += word.textContent\n\n    if (!this.el.children[i + 2] || this.el.children[i + 1].getBoundingClientRect().top > word.getBoundingClientRect().top) {\n      // end of line\n      currentLine.top = word.getBoundingClientRect().top + window.scrollY\n      currentLine.end += currentLine.begin\n\n      lines.push({\n        begin: currentLine.begin,\n        end: currentLine.end,\n        top: currentLine.top,\n        text: currentLine.text\n      })\n      currentLine.text = ''\n      currentLine.begin = null\n      currentLine.end = 0\n    } else {\n      // more to come on this line\n      currentLine.end += this.spaceWidth\n      currentLine.text += ' '\n    }\n  })\n  this.lines = lines\n}\n\nCanvas.prototype.render = function () {\n  const boundingBox = this.el.getBoundingClientRect()\n  const elStyles = window.getComputedStyle(this.el, null)\n  const fontMetrics = this.fontMetrics\n  const ctx = this.ctx\n  const font = ctx.font = `${elStyles.fontStyle} ${elStyles.fontSize} ${elStyles.fontFamily}`\n  const strokeWidth = (this.options.strokeWidth === 'auto')\n    ? this.ctx.measureText('.').width / 6\n    : this.options.strokeWidth * this.ratio\n\n  const strokeStyle = (this.options.strokeStyle === 'auto')\n    ? elStyles.color\n    : this.options.strokeStyle\n\n  const masking = (this.options.masking !== null)\n    ? (this.options.masking === 'auto')\n      ? this.ctx.measureText('.').width / 2\n      : this.ratio * this.options.masking\n    : false\n\n  this.lines.map(drawLine.bind(this))\n\n  function drawLine (line, index) {\n    const maskY = fontMetrics.line * index\n    const baselineY = (index + 1) * fontMetrics.line - fontMetrics.offset - fontMetrics.baseline\n    const lineY = (this.options.position === 'auto')\n      ? baselineY + fontMetrics.baseline * 0.6180339887\n      : baselineY + this.options.position / this.ratio\n\n    console.log(line.text, fontMetrics);\n\n    ctx.lineWidth = strokeWidth < 1\n      ? 1\n      : parseInt(strokeWidth, 10)\n\n    ctx.strokeStyle = strokeStyle\n    ctx.beginPath()\n    ctx.moveTo(line.begin, parseInt(lineY, 10))\n    ctx.lineTo(line.end, parseInt(lineY, 10))\n    ctx.globalCompositeOperation = 'source-over'\n    ctx.stroke()\n    ctx.closePath()\n\n    if (!masking) return\n\n    ctx.globalCompositeOperation = 'destination-out'\n    ctx.font = font\n    ctx.fillStyle = 'green'\n    ctx.textBaseline = 'top'\n    ctx.fillText(line.text, parseInt(line.begin, 10), parseInt(maskY, 10))\n    ctx.lineWidth = parseInt(masking, 10)\n    ctx.strokeStyle = 'blue'\n    ctx.strokeText(line.text, parseInt(line.begin, 10), parseInt(maskY, 10))\n  }\n\n}\n\nmodule.exports = Canvas\n"],"sourceRoot":"/source/"}